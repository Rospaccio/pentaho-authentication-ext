<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:pen="http://www.pentaho.com/schema/pentaho-system"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.pentaho.com/schema/pentaho-system http://www.pentaho.com/schema/pentaho-system.xsd"
       default-lazy-init="true">

	<bean id="extPropertiyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="pentaho-authentication-ext.properties"></property>
		<property name="placeholderPrefix" value="$ext{"></property>
	</bean>

	<bean id="usernameProvider" class="org.merka.pentaho.ext.service.MockUsernameProvider">
	</bean>

	<bean id="authenticationExtensionProvider" class="org.merka.pentaho.ext.security.ExtensionAuthenticationProvider">
	</bean>

	<!-- ======================== AUTHENTICATION ======================= -->
	<bean id="authenticationManager" class="org.springframework.security.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref bean="authenticationExtensionProvider" />
				<pen:bean
					class="org.springframework.security.providers.AuthenticationProvider">
<!-- 					<pen:attributes> -->
<!-- 						<pen:attr key="providerName" value="${security.provider}" /> -->
<!-- 					</pen:attributes> -->
				</pen:bean>
				<ref bean="anonymousAuthenticationProvider" />
			</list>
		</property>
	</bean>

	<bean id="authenticationExtensionFilter" class="org.merka.pentaho.ext.web.AuthenticationExtensionFilter">
		<property name="userRoleDao">
			<ref bean="userRoleDaoTxn" />
		</property>
		<property name="usernameProvider">
			<ref bean="usernameProvider" />
		</property>
		<property name="authenticationManager">
			<ref bean="authenticationManager" />
		</property>
	</bean>
	
	<bean id="loginTicketManager" class="org.merka.pentaho.ext.ticket.LoginTicketManager" scope="singleton"></bean>
	
	<bean id="loginTicketGeneratorFilter" class="org.merka.pentaho.ext.web.LoginTicketGeneratorFilter">
		<property name="loginTicketManager" ref="loginTicketManager"></property>
	</bean>

	<bean id="filterChainProxy" class="org.springframework.security.util.FilterChainProxy">
		<property name="filterInvocationDefinitionSource">
			<value>
				<![CDATA[CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
		        PATTERN_TYPE_APACHE_ANT
		        /webservices/**=securityContextHolderAwareRequestFilterForWS,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,basicProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilterForWS,filterInvocationInterceptorForWS
		        /api/**=securityContextHolderAwareRequestFilterForWS,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,basicProcessingFilter,requestParameterProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilterForWS,filterInvocationInterceptorForWS
		        /plugin/**=securityContextHolderAwareRequestFilterForWS,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,basicProcessingFilter,requestParameterProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilterForWS,filterInvocationInterceptorForWS
		        /**=loginTicketGeneratorFilter,securityContextHolderAwareRequestFilter,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,httpSessionReuseDetectionFilter,logoutFilter,authenticationProcessingFilter,basicProcessingFilter,requestParameterProcessingFilter,authenticationExtensionFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor]]>
			</value>
		</property>
	</bean>

</beans>